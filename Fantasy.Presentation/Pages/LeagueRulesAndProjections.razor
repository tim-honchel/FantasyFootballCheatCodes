@page "/LeagueRulesAndProjections"

@inject IApiCallService service
@inject NavigationManager navigation
@inject UserData userData;
@using Fantasy.Presentation.Components
@using Fantasy.Presentation.Data.RequestObjects
@using Fantasy.Presentation.Data.State;
@using Fantasy.Presentation.Data.ViewModels
@using Fantasy.Presentation.Services.Interfaces

<PageTitle>League Rules And Projections</PageTitle>

<h1>League Rules And Projections</h1>
<p>League ID: @userData.Rules.LeagueID</p>
<br />

<h2>Rules</h2>

<RulesTable></RulesTable>

<br />

<h2>Players</h2>
<p>You may edit the projected cost and points per week before requesting a draft strategy.</p>

<table class=rules-table id="players">
    <colgroup>
        <col span="1" style="width: 50px;">
        <col span="1" style="width: 150px;">
        <col span="1" style="width: 50px;">
        <col span="1" style="width: 50px;">
        <col span="1" style="width: 50px;">
    </colgroup>
    <tr>
        <th>Pos</th>
        <th>Name</th>
        <th>Team</th>
        <th>Cost</th>
        <th>Points</th>
    </tr>
    @foreach (var player in userData.Players)
    {
        <tr>
            <td>@player.Position</td>
            <td>@player.FirstInitial @player.LastName</td>
            <td>@player.Team</td>
            <td>$@player.Cost</td>
            <td>@player.WeeklyPoints</td>
            <td><button @onclick="(() => EditPlayer(player.PlayerID))">Edit</button></td>
        </tr>
    }
</table>

@if (showEditModal)
{
    <EditPlayerModal playerToEdit="@playerToEdit" @bind-showEditModal="@showEditModal"></EditPlayerModal>
}

<br />
<br />

<button type="submit" class="btn-primary next-button" id="next-page" @onclick="NextPage">Generate Strategy</button>

<br />
<br />

@code {
    public PlayerViewModel? playerToEdit;
    public bool showEditModal = false;

    public void EditPlayer(int playerID)
    {
        playerToEdit = userData.Players.Where(player => player.PlayerID == playerID).FirstOrDefault();
        if (playerToEdit != null)
        {
            showEditModal = true;
        }
    }

    public void NextPage()
    {
        navigation.NavigateTo("Loading");
    }
}